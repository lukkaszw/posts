{"version":3,"sources":["components/common/ErrorComponent/ErrorComponent.module.scss","components/common/Loader/Loader.module.scss","components/views/PostEdit/PostEdit.module.scss","components/views/PostAdd/PostAdd.module.scss","components/layout/Navigation/Navigation.module.scss","components/features/PostForm/PostForm.module.scss","redux/userRedux.js","components/layout/Navigation/Navigation.js","components/layout/Header/Header.js","components/layout/MainLayout/MainLayout.js","components/common/ErrorComponent/ErrorComponent.js","components/common/Loader/Loader.js","components/common/PostsList/PostsList.js","config/api.js","config/pages.js","redux/postsRedux.js","contexts/AuthenticationContext.js","components/views/Homepage/Homepage.js","components/common/PostInfo/PostInfo.js","redux/currentPostRedux.js","components/views/Post/Post.js","components/features/PostForm/useForm.js","utils/validator.js","components/features/PostForm/useValidation.js","components/features/PostForm/PostForm.js","utils/editOnePost.js","components/views/PostEdit/PostEdit.js","utils/addOnePost.js","components/views/PostAdd/PostAdd.js","components/views/NotFound/NotFound.js","components/views/MyPosts/MyPosts.js","App.js","redux/initialState.js","redux/store.js","serviceWorker.js","index.js","components/common/PostInfo/PostInfo.module.scss","components/views/Homepage/Homepage.module.scss","components/views/MyPosts/MyPosts.module.scss","components/common/PostsList/PostsList.module.scss","components/views/Post/Post.module.scss"],"names":["module","exports","name","getIsAuth","user","isAuth","AUTHENTICATE","Container","connect","state","className","linksList","styles","navigation","navigationItem","exact","to","navigationLink","activeClassName","active","clsx","root","href","Component","AppBar","position","Toolbar","children","ErrorComponent","title","message","isOpen","isLinkToHP","Modal","aria-labelledby","aria-describedby","open","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Paper","paper","id","Link","Loader","CircularProgress","PostsList","posts","postList","length","map","post","key","postItem","_id","postTitleLink","api","url","endPoints","pagesConfig","maxPostsOnPage","getAll","data","isLoadingActive","loading","isLoadingError","error","getCount","count","createActionName","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","fetchStarted","payload","type","fetchSuccess","fetchError","fetchPosts","page","dispatch","axios","get","then","result","email","catch","err","AuthenticationContext","React","createContext","userEmail","isLoading","isError","useContext","pages","Math","ceil","useState","setPage","useEffect","header","link","list","paginationWrapper","Pagination","onChange","e","value","color","siblingCount","PostInfo","content","createdAt","imageUrl","author","status","price","phone","localization","date","Date","toLocaleDateString","description","image","src","alt","textContent","shortData","priceItem","getCurrentPost","currentPost","isRequestActive","request","isRequestError","fetchOnePost","postId","match","params","linkWrapper","useForm","setTitle","setContent","setPrice","setImage","setPhone","setLocalization","fields","methods","setStatus","validator","isTitle","isContent","isEmail","_v","isUrl","isURL","isPhone","isMobilePhone","isValidPrice","isLocalization","useValidation","titleErr","setTitleError","contentErr","setContentError","imageUrlErr","setImageError","phoneErr","setPhoneError","localizationErr","setLocalizationError","fieldsErrors","errorsMethods","checkAllFields","titleValue","contentValue","imageUrlValue","phoneValue","localizationValue","isTitleValid","isContentValid","isUrlValid","isPhoneValid","isLocalizationValid","PostForm","submitAction","submitButton","redirectUrl","editingId","isSent","setIsSent","isSending","setIsSending","setIsError","onSubmit","preventDefault","formControl","TextField","inputBig","label","target","helperText","smallControls","FormControl","variant","InputLabel","htmlFor","Select","native","labelWidth","inputProps","InputProps","endAdornment","InputAdornment","TextareaAutosize","placeholder","btnControl","Button","editOnePost","put","addOnePost","fetchMyPosts","theme","createMuiTheme","palette","primary","main","StylesProvider","injectFirst","ThemeProvider","CssBaseline","Provider","path","component","Homepage","PostAdd","NotFound","Post","PostEdit","MyPosts","initialState","reducers","statePart","action","Object","keys","forEach","item","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uJACAA,EAAOC,QAAU,CAAC,MAAQ,gC,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,+ECAzBD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,eAAiB,mCAAmC,eAAiB,mCAAmC,OAAS,6B,mBCA/MD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,YAAc,8BAA8B,cAAgB,gCAAgC,OAAS,yBAAyB,WAAa,6BAA6B,MAAQ,wBAAwB,QAAU,0BAA0B,MAAQ,0B,4CCKjTC,E,+HALZC,EAAW,SAAC,GAAD,SAAEC,KAAeC,QAQnCC,GAHmBJ,EAGa,eAHT,cADT,OACS,YAA0BA,I,iBCuDjDK,EAAYC,aAJM,SAAAC,GAAK,MAAK,CAChCJ,OAAQF,EAAUM,MAGFD,EAlDA,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,UAAWL,EAAa,EAAbA,OACvBM,EACJ,wBAAID,UAAWE,IAAOC,YACpB,wBAAIH,UAAWE,IAAOE,gBACpB,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIN,UAAWE,IAAOK,eAAgBC,gBAAiBN,IAAOO,QAAhF,SAEF,wBAAIT,UAAWE,IAAOE,gBACpB,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,YAAYN,UAAWE,IAAOK,eAAgBC,gBAAiBN,IAAOO,QAAxF,QAEF,wBAAIT,UAAWE,IAAOE,gBACpB,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,WAAWN,UAAWE,IAAOK,eAAgBC,gBAAiBN,IAAOO,QAAvF,QAMN,OACE,yBAAKT,UAAWU,YAAKV,EAAWE,IAAOS,OACrC,6BAEIhB,EACEM,EAEA,yBAAKD,UAAWE,IAAOE,gBACrB,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIN,UAAWE,IAAOK,eAAgBC,gBAAiBN,IAAOO,QAAhF,UAIR,6BAEId,EACE,uBAAGiB,KAAK,oCAAoCZ,UAAWE,IAAOK,gBAA9D,UAEA,uBAAGK,KAAK,oCAAoCZ,UAAWE,IAAOK,gBAA9D,c,kBCjCNM,EAAY,kBAChB,yBAAKb,UAAWE,IAAOS,MACrB,kBAACG,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,KACE,kBAAC,EAAD,W,kBCTJgB,EAAY,SAAC,GAAD,IAAEI,EAAF,EAAEA,SAAF,OAChB,yBAAKjB,UAAWE,IAAOS,MACrB,kBAAC,EAAD,MACA,kBAACd,EAAA,EAAD,KACGoB,K,sECmCQC,EApCQ,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAChD,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,kBAAgB,yBAChBC,mBAAiB,+BACjBC,KAAML,EACNM,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,EAAA,EAAD,CAAMC,GAAIX,GACR,kBAACY,EAAA,EAAD,CAAOjC,UAAWE,IAAOgC,OACvB,wBAAIC,GAAG,0BAA0BhB,GACjC,uBAAGgB,GAAG,gCAAgCf,GAEpCE,GAAc,kBAACc,EAAA,EAAD,CAAMxB,KAAK,KAAX,0B,2BCdbyB,EARA,WACb,OACE,yBAAKrC,UAAWE,IAAOS,MACrB,kBAAC2B,EAAA,EAAD,Q,iBCwBSC,EA1BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,6BACE,wBAAIxC,UAAWE,IAAOuC,UAElBD,EAAME,OAAS,EACbF,EAAMG,KAAI,SAAAC,GAAI,OACZ,wBACEC,IAAKD,EAAKzB,MACVnB,UAAWE,IAAO4C,UAElB,kBAAC,IAAD,CAAMxC,GAAE,gBAAWsC,EAAKG,KAAO/C,UAAWE,IAAO8C,eAAgBJ,EAAKzB,WAI1E,qD,kCCbG8B,EARH,CACVC,IAAK,wBACLC,UAAW,CACTX,MAAO,UCCIY,EAJK,CAClBC,eAAgB,ICGZA,EAAiBD,EAAYC,eAGtBC,EAAS,SAAC,GAAD,SAAEd,MAAiBe,KAAKf,OACjCgB,GAAkB,SAAC,GAAD,SAAGhB,MAAkBiB,QAAQhD,QAC/CiD,GAAiB,SAAC,GAAD,SAAGlB,MAAkBiB,QAAQE,OAE9CC,GAAW,SAAC,GAAD,SAAEpB,MAAiBe,KAAKM,OAI1CC,GAAmB,SAAAtE,GAAI,oBADT,QACS,YAA0BA,IAGjDuE,GAAcD,GAAiB,eAC/BE,GAAgBF,GAAiB,iBACjCG,GAAcH,GAAiB,eAGxBI,GAAe,SAAAC,GAAO,MAAK,CAAEA,UAASC,KAAML,KAC5CM,GAAe,SAAAF,GAAO,MAAK,CAAEA,UAASC,KAAMJ,KAC5CM,GAAa,SAAAH,GAAO,MAAK,CAAEA,UAASC,KAAMH,KAI1CM,GAAa,SAACC,GACzB,OAAO,SAACC,GACNA,EAASP,MACT,IAAMhB,EAAG,UAAMD,EAAIC,IAAV,YAAiBD,EAAIE,UAAUX,MAA/B,kBAA8Ca,EAA9C,kBAAsEmB,EAAO,GAAKnB,GAC3FqB,IAAMC,IAAIzB,GACP0B,MAAK,SAAAC,GAEJ,GADAJ,EAASJ,GAAa,CAAE7B,MAAOqC,EAAOtB,KAAKf,MAAOqB,MAAOgB,EAAOtB,KAAKM,SAClEgB,EAAOtB,KAAK7D,KAAM,CACnB,IAAMoF,EAAQD,EAAOtB,KAAK7D,KAAKoF,MAC/BL,ET1BkC,CAAEN,QS0BVW,ET1BmBV,KAAMxE,QS6BtDmF,OAAM,SAAAC,GAAG,OAAIP,EAASH,WCrCdW,GAFeC,IAAMC,cAAc,CAAExF,QAAQ,EAAOyF,UAAW,K,oBCkFxEvF,GAAYC,aAXM,SAAAC,GAAK,MAAK,CAChCyC,MAAOc,EAAOvD,GACdsF,UAAW7B,GAAgBzD,GAC3BuF,QAAS5B,GAAe3D,GACxB8D,MAAOD,GAAS7D,OAGS,SAAA0E,GAAQ,MAAK,CACtCF,WAAY,SAACC,GAAD,OAAUC,EAASF,GAAWC,QAG1B1E,EApEA,SAAC,GAAsD,IAApDyE,EAAmD,EAAnDA,WAAYV,EAAuC,EAAvCA,MAAOrB,EAAgC,EAAhCA,MAAO6C,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAChD3F,EAAW4F,qBAAWN,IAAtBtF,OACF6F,EAAQC,KAAKC,KAAK7B,EAAQT,EAAYC,gBAF0B,EAG9CsC,mBAAS,GAHqC,mBAG/DnB,EAH+D,KAGzDoB,EAHyD,KAStE,OAJAC,qBAAU,WACRtB,EAAWC,KACV,CAACD,EAAYC,IAGd,6BAASxE,UAAWE,KAAOS,MACzB,4BAAQX,UAAWE,KAAO4F,QACxB,sCAEEnG,GAAU,kBAAC,IAAD,CAAMW,GAAG,YAAYN,UAAWE,KAAO6F,MAAvC,YAGd,yBAAK/F,UAAWE,KAAO8F,MAEnBX,EACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAW7C,MAAOA,KAKtBgD,EAAQ,GACR,yBAAKxF,UAAWE,KAAO+F,mBACrB,kBAACC,EAAA,EAAD,CACErC,MAAO2B,EACPhB,KAAMA,EACN2B,SAAU,SAACC,EAAGC,GAAJ,OAAcT,EAAQS,IAChCC,MAAM,UACNC,aAAc,KAIpB,kBAAC,EAAD,CACEpF,MAAM,wBACNC,QAAQ,gDACRC,OAAQiE,Q,oBCTDkB,GA3CE,SAAC,GAA8F,EAA5FzD,IAA6F,IAAxF5B,EAAuF,EAAvFA,MAAOsF,EAAgF,EAAhFA,QAASC,EAAuE,EAAvEA,UAAWC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,aACpFC,EAAO,IAAIC,KAAKR,GAAWS,qBAEjC,OACE,6BAASnH,UAAWE,KAAOS,MACzB,yBAAKX,UAAWE,KAAO4F,QACrB,4BAAK3E,GACL,6BAAK,gCAAS6F,EAAT,IAAwBC,KAG/B,yBAAKjH,UAAWE,KAAOkH,aACrB,yBAAKpH,UAAWE,KAAOmH,MAAOC,IAAKX,EAAUY,IAAKpG,IAClD,yBAAKnB,UAAWE,KAAOsH,aACrB,6BACE,yBAAKxH,UAAWE,KAAOuH,WACrB,2BAAG,wCAAa,gCAASb,KACzB,2BAAG,uCAAY,gCAASG,KACxB,2BAAG,gCAAoB,WAAXF,EAAsB,8BAA2B,8BAE/D,uBAAG7G,UAAWE,KAAOuG,SAAUA,IAEjC,6BACE,wBAAIzG,UAAWE,KAAO4G,OAAO,0BAAM9G,UAAWE,KAAOwH,WAAYZ,EAApC,kBCvB5Ba,GAAiB,SAAC,GAAD,SAAEC,YAA6BrE,MAChDsE,GAAkB,SAAC,GAAD,SAAGD,YAA8BE,QAAQrH,QAC3DsH,GAAiB,SAAC,GAAD,SAAGH,YAA8BE,QAAQnE,OAIjEG,GAAmB,SAAAtE,GAAI,oBADT,eACS,YAA0BA,IAGjDuE,GAAcD,GAAiB,eAC/BE,GAAgBF,GAAiB,iBACjCG,GAAcH,GAAiB,eAOxBkE,GAAc,SAACC,GAC1B,OAAO,SAACxD,GALkB,IAAAN,EAMxBM,EANoC,CAAEN,UAASC,KAAML,KAOrD,IAAMb,EAAG,UAAMD,EAAIC,IAAV,YAAiBD,EAAIE,UAAUX,MAA/B,YAAwCyF,GACjDvD,IAAMC,IAAIzB,GACP0B,MAAK,SAAAC,GAAM,OAAIJ,EARM,SAAAN,GAAO,MAAK,CAAEA,UAASC,KAAMJ,IAQ1BK,CAAaQ,EAAOtB,KAAKX,UACjDmC,OAAM,SAAAC,GAAG,OAAIP,EARM,SAAAN,GAAO,MAAK,CAAEA,UAASC,KAAMH,IAQ1BK,S,oBC+CvBzE,GAAYC,aAXM,SAAAC,GAAK,MAAK,CAChC6C,KAAM+E,GAAe5H,GACrBsF,UAAWwC,GAAgB9H,GAC3BuF,QAASyC,GAAehI,OAGC,SAAC0E,GAAD,MAAe,CACxCuD,aAAc,SAACC,GAAD,OAAYxD,EAASuD,GAAaC,QAIhCnI,EA3DA,SAAC,GAAsD,IAArDoI,EAAoD,EAApDA,MAAOF,EAA6C,EAA7CA,aAAcpF,EAA+B,EAA/BA,KAAMyC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAClD2C,EAASC,EAAMC,OAAOhG,GAC5B0D,qBAAU,WACRmC,EAAaC,KACZ,CAACD,EAAcC,IAJoD,MAMxC1C,qBAAWN,IAAjCtF,EAN8D,EAM9DA,OAAQyF,EANsD,EAMtDA,UAEhB,OACE,yBAAKpF,UAAWE,KAAOS,MAEnB0E,GAAa,kBAAC,EAAD,QAGVzC,IAASyC,IAAcC,GAC1B,iCAEK3F,GAAUiD,EAAKgE,SAAWxB,GAE3B,yBAAKpF,UAAWE,KAAOkI,aACrB,kBAAC,IAAD,CAAMpI,UAAWE,KAAO6F,KAAMzF,GAAE,gBAAWsC,EAAKG,IAAhB,UAAhC,SAKJ,kBAAC,GAAaH,IAGlB,kBAAC,EAAD,CACEvB,OAAQiE,EACRnE,MAAO,wBACPC,QAAQ,sDACRE,YAAY,Q,sECfL+G,GA/BC,SAACzF,GAAU,IAAD,EACE+C,mBAAS/C,EAAOA,EAAKzB,MAAQ,IAD/B,mBACjBA,EADiB,KACVmH,EADU,OAEM3C,mBAAS/C,EAAOA,EAAK6D,QAAU,IAFrC,mBAEjBA,EAFiB,KAER8B,EAFQ,OAGE5C,mBAAS/C,EAAOA,EAAKkE,MAAQ,GAH/B,mBAGjBA,EAHiB,KAGV0B,EAHU,OAIK7C,mBAAS/C,EAAOA,EAAK+D,SAAW,IAJrC,mBAIjBA,EAJiB,KAIP8B,EAJO,OAKE9C,mBAAS/C,EAAOA,EAAKmE,MAAQ,IAL/B,mBAKjBA,EALiB,KAKV2B,EALU,OAMgB/C,mBAAS/C,EAAOA,EAAKoE,aAAe,IANpD,mBAMjBA,EANiB,KAMH2B,EANG,OAOIhD,mBAAS/C,EAAOA,EAAKiE,OAAS,aAPlC,mBASxB,MAAO,CACL+B,OAAQ,CACNzH,QACAsF,UACAK,QACAH,WACAI,QACAC,eACAH,OAjBoB,MAmBtBgC,QAAS,CACPP,WACAC,aACAC,WACAC,WACAC,WACAC,kBACAG,UA1BoB,Q,oBCaXC,GAbG,CAChBC,QAAS,SAAC3C,GAAD,OAAWA,EAAM3D,OAAS,GACnCuG,UAAW,SAAC5C,GAAD,OAAWA,EAAM3D,OAAS,IACrCwG,QAAS,SAAC7C,GAAD,OAAW8C,KAAGD,QAAQ7C,IAC/B+C,MAAO,SAAC/C,GAAD,OAAW8C,KAAGE,MAAMhD,IAC3BiD,QAAS,SAACjD,GAAD,OAAW8C,KAAGI,cAAclD,EAAO,UAC5CmD,aAAc,SAACnD,GACb,OAAGA,GAAS,GAAe,IAARA,EAAc,IAAO,GAG1CoD,eAAgB,SAACpD,GAAD,OAAWA,EAAM3D,OAAS,ICmC7BgH,GA5CO,WAAO,IAAD,EACQ/D,oBAAS,GADjB,mBACnBgE,EADmB,KACTC,EADS,OAEYjE,oBAAS,GAFrB,mBAEnBkE,EAFmB,KAEPC,EAFO,OAGWnE,oBAAS,GAHpB,mBAGnBoE,EAHmB,KAGNC,EAHM,OAIQrE,oBAAS,GAJjB,mBAInBsE,EAJmB,KAITC,EAJS,OAKsBvE,oBAAS,GAL/B,mBAKnBwE,EALmB,KAKFC,EALE,KAqBpBZ,EAAeT,GAAUS,aAE/B,MAAO,CACLa,aAAc,CACZV,WACAE,aACAE,cACAE,WACAE,mBAEFG,cAAe,CACbC,eAzBmB,SAACC,EAAYC,EAAcC,EAAeC,EAAYC,GAC3E,IAAMC,EAAe9B,GAAUC,QAAQwB,GACjCM,EAAiB/B,GAAUE,UAAUwB,GACrCM,EAAahC,GAAUK,MAAMsB,GAC7BM,EAAejC,GAAUO,QAAQqB,GACjCM,EAAsBlC,GAAUU,eAAemB,GAMrD,OALAhB,GAAeiB,GACff,GAAiBgB,GACjBd,GAAee,GACfb,GAAec,GACfZ,GAAsBa,GACdJ,GAAgBC,GAAkBC,GAAcC,GAAgBC,GAetErB,gBACAE,kBACAE,gBACAE,gBACAE,wBAEFZ,iB,oBCwJW0B,GA9KE,SAAC,GAA6E,IAA3EtI,EAA0E,EAA1EA,KAAMuI,EAAoE,EAApEA,aAAc/F,EAAsD,EAAtDA,UAAWgG,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAAgB,EAIxFjD,GAAQzF,GAFVgG,EAF0F,EAE1FA,OACAC,EAH0F,EAG1FA,QAH0F,EAUxFa,KAHFW,EAP0F,EAO1FA,aACAC,EAR0F,EAQ1FA,cACAd,EAT0F,EAS1FA,aAT0F,EAYhE7D,oBAAS,GAZuD,mBAYrF4F,EAZqF,KAY7EC,EAZ6E,OAa1D7F,oBAAS,GAbiD,mBAarF8F,EAbqF,KAa1EC,EAb0E,OAc9D/F,oBAAS,GAdqD,mBAcrFL,EAdqF,KAc5EqG,EAd4E,KAgB5F,OACE,oCACIF,GAAa,kBAAC,EAAD,MACf,0BACEzL,UAAWE,KAAOS,KAClBiL,SAAU,SAACxF,GAGT,GAFAA,EAAEyF,iBACkBvB,EAAcC,eAAe3B,EAAOzH,MAAOyH,EAAOnC,QAASmC,EAAOjC,SAAUiC,EAAO7B,MAAO6B,EAAO5B,cACrG,CACd,IAAMiB,EAASqD,GAAa,KAC5BI,GAAa,GACbP,EAAa,eAAKvC,GAAUxD,EAAW6C,GACpCrD,MAAK,SAAAC,GACJ6G,GAAa,GACbF,GAAU,MAEXzG,OAAM,SAAAC,GACL0G,GAAa,GACbC,GAAW,SAKnB,yBAAK3L,UAAWE,KAAO4L,aACrB,kBAACC,GAAA,EAAD,CACEpI,MAAO0G,EAAaV,SACpB3J,UAAWE,KAAO8L,SAClBC,MAAM,QACN5F,MAAOuC,EAAOzH,MACdgF,SAAU,SAACC,GACTyC,EAAQP,SAASlC,EAAE8F,OAAO7F,OACvBgE,EAAaV,UACdW,EAAcV,eAAc,IAGhCuC,WAAW,2BAGf,yBAAKnM,UAAWE,KAAO4L,aACrB,kBAACC,GAAA,EAAD,CACEpI,MAAO0G,EAAaN,YACpB/J,UAAWE,KAAO8L,SAClBC,MAAM,YACN5F,MAAOuC,EAAOjC,SACdR,SAAU,SAACC,GACTyC,EAAQJ,SAASrC,EAAE8F,OAAO7F,OACvBgE,EAAaN,aACdO,EAAcN,eAAc,OAKpC,yBAAKhK,UAAWE,KAAO4L,aACrB,kBAACC,GAAA,EAAD,CACEpI,MAAO0G,EAAaJ,SACpBgC,MAAM,eACN5F,MAAOuC,EAAO7B,MACdZ,SAAU,SAACC,GACTyC,EAAQH,SAAStC,EAAE8F,OAAO7F,OACvBgE,EAAaJ,UACdK,EAAcJ,eAAc,OAKpC,yBAAKlK,UAAWE,KAAO4L,aACrB,kBAACC,GAAA,EAAD,CACEpI,MAAO0G,EAAaF,gBACpB8B,MAAM,eACN5F,MAAOuC,EAAO5B,aACdb,SAAU,SAACC,GACTyC,EAAQF,gBAAgBvC,EAAE8F,OAAO7F,OAC9BgE,EAAaF,iBACdG,EAAcF,sBAAqB,OAK3C,yBAAKpK,UAAWU,YAAKR,KAAO4L,YAAa5L,KAAOkM,gBAC9C,kBAACC,GAAA,EAAD,CAAaC,QAAQ,WAAWtM,UAAWE,KAAO2G,QAChD,kBAAC0F,GAAA,EAAD,CAAYC,QAAQ,iBAApB,OAGA,kBAACC,GAAA,EAAD,CACEC,QAAM,EACNrG,MAAOuC,EAAO/B,OACdV,SAAU,SAACC,GAAD,OAAOyC,EAAQC,UAAU1C,EAAE8F,OAAO7F,QAC5CsG,WAAY,GACZC,WAAY,CACVpN,KAAM,SACN2C,GAAI,kBAGN,4BAAQkE,MAAO,aAAf,YACA,4BAAQA,MAAO,SAAf,SACA,4BAAQA,MAAO,UAAf,iBAGJ,kBAAC0F,GAAA,EAAD,CACE/L,UAAWE,KAAO4G,MAClB1C,KAAK,SACL6H,MAAM,QACNK,QAAQ,WACRjG,MAAOuC,EAAO9B,MACd+F,WAAY,CACVC,aAAc,kBAACC,GAAA,EAAD,CAAgBhM,SAAS,OAAzB,YAEhBoF,SAAU,SAACC,GACNoD,EAAapD,EAAE8F,OAAO7F,QACvBwC,EAAQL,SAASpC,EAAE8F,OAAO7F,WAKlC,yBAAKrG,UAAWE,KAAO4L,aACrB,kBAACkB,GAAA,EAAD,CACE3G,MAAOuC,EAAOnC,QACdzG,UAAWU,YAAKR,KAAOuG,QAAS4D,EAAaR,WAAa3J,KAAOyD,MAAQ,MACzEsJ,YAAY,kCACZ9G,SAAU,SAACC,GACTyC,EAAQN,WAAWnC,EAAE8F,OAAO7F,OACzBgE,EAAaR,YACdS,EAAcR,iBAAgB,OAKtC,yBAAK9J,UAAWE,KAAOgN,YACrB,kBAACC,GAAA,EAAD,CACEb,QAAQ,YACRhG,MAAM,YACNlC,KAAK,UACLgH,GAA8B,WAIhCG,GAAU,kBAAC,IAAD,CAAUjL,GAAI+K,KAG5B,kBAAC,EAAD,CACEhK,OAAQiE,EACRnE,MAAO,uBACPC,QAAQ,4CACRE,YAAY,MCzKL8L,GAPK,SAACxK,EAAMkC,EAAOmD,GAChC,IAAM/E,EAAG,UAAMD,EAAIC,IAAV,YAAiBD,EAAIE,UAAUX,MAA/B,YAAwCyF,GACjD,OAAQvD,IAAM2I,IAAInK,EAAV,eACHN,K,qBC+DD/C,GAAYC,aAVM,SAAAC,GAAK,MAAK,CAChC6C,KAAM+E,GAAe5H,GACrBsF,UAAWwC,GAAgB9H,GAC3BuF,QAASyC,GAAehI,OAGC,SAAC0E,GAAD,MAAe,CACxCuD,aAAc,SAACC,GAAD,OAAYxD,EAASuD,GAAaC,QAGhCnI,EArDA,SAAC,GAAwD,IAAtDoI,EAAqD,EAArDA,MAAQF,EAA6C,EAA7CA,aAAc3C,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,QAAS1C,EAAW,EAAXA,KACvDqF,EAASC,EAAMC,OAAOhG,GAC5B0D,qBAAU,WACRmC,EAAaC,KACZ,CAACA,EAAQD,IAJ4D,IAMhE5C,EAAcG,qBAAWN,IAAzBG,UAER,OACE,yBAAKpF,UAAWE,KAAOS,MACrB,0CAAgBsH,GAEd5C,GAAa,kBAAC,EAAD,QAGVzC,GAAQA,EAAKG,MAAQkF,GACtB,kBAAC,GAAD,CACErF,KAAMA,EACNwI,aAAa,YACbhG,UAAWA,EACX+F,aAAciC,GACd9B,UAAWrD,EACXoD,YAAW,gBAAWpD,KAG5B,kBAAC,EAAD,CACE5G,OAAQiE,EACRnE,MAAO,wBACPC,QAAQ,sDACRE,YAAY,QClCLgM,GARI,SAAC1K,EAAMwC,GACxB,IAAMlC,EAAG,UAAMD,EAAIC,IAAV,YAAiBD,EAAIE,UAAUX,OACxC,OAAOkC,IAAM9B,KAAKM,EAAX,eACFN,EADE,CAELgE,OAAQxB,M,qBCCNvE,GAAY,WAAO,IACfuE,EAAcG,qBAAWN,IAAzBG,UAER,OACE,yBAAKpF,UAAWE,KAAOS,MACrB,yCACA,kBAAC,GAAD,CACEwK,aAAcmC,GACdlI,UAAWA,EACXiG,YAAY,IACZD,aAAa,e,qBCZfvK,GAAY,kBAChB,yBAAKb,UAAWE,KAAOS,MACrB,gD,oBCsEEd,GAAYC,aAXM,SAAAC,GAAK,MAAK,CAChCyC,MAAOc,EAAOvD,GACdsF,UAAW7B,GAAgBzD,GAC3BuF,QAAS5B,GAAe3D,GACxB8D,MAAOD,GAAS7D,OAGS,SAAA0E,GAAQ,MAAK,CACtC8I,aAAc,SAAC/I,GAAD,OAAUC,Ef9BE,SAACD,GAC3B,OAAO,SAACC,GACNA,EAASP,MACT,IAAMhB,EAAG,UAAMD,EAAIC,IAAV,YAAiBD,EAAIE,UAAUX,MAA/B,qBAAiDa,EAAjD,kBAAyEmB,EAAO,GAAKnB,GAC9FqB,IAAMC,IAAIzB,GACP0B,MAAK,SAAAC,GAAM,OAAIJ,EAASJ,GAAa,CAAE7B,MAAOqC,EAAOtB,KAAKf,MAAOqB,MAAOgB,EAAOtB,KAAKM,YACpFkB,OAAM,SAAAC,GAAG,OAAIP,EAASH,UewBMiJ,CAAa/I,QAG9B1E,EAhEA,SAAC,GAAwD,IAAtD0C,EAAqD,EAArDA,MAAOqB,EAA8C,EAA9CA,MAAO0J,EAAuC,EAAvCA,aAAclI,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACpDE,EAAQC,KAAKC,KAAK7B,EAAQT,EAAYC,gBAD4B,EAEhDsC,mBAAS,GAFuC,mBAEjEnB,EAFiE,KAE3DoB,EAF2D,KAQxE,OAJAC,qBAAU,WACR0H,EAAa/I,KACZ,CAAC+I,IAGF,6BAASvN,UAAWE,KAAOS,MACzB,4BAAQX,UAAWE,KAAO4F,QACxB,yCACA,kBAAC,IAAD,CAAMxF,GAAG,YAAYN,UAAWE,KAAO6F,MAAvC,YAEF,6BAEIV,EACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAW7C,MAAOA,KAKtBgD,EAAQ,GACR,yBAAKxF,UAAWE,KAAO+F,mBACrB,kBAACC,EAAA,EAAD,CACErC,MAAO2B,EACPhB,KAAMA,EACN2B,SAAU,SAACC,EAAGC,GAAJ,OAAcT,EAAQS,IAChCC,MAAM,UACNC,aAAc,KAIpB,kBAAC,EAAD,CACEpF,MAAM,wBACNC,QAAQ,gDACRC,OAAQiE,QCjCVkI,GAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CAAEC,KAAM,cAoCf/N,GAAYC,aALS,SAACC,GAAD,MAAY,CACrCJ,OAAQF,EAAUM,GAClBqF,WzBpDuB,EyBoDHrF,EzBpDE,EAAGL,KAAgBoF,QAAnB,IAAC,IyBuDPhF,EAhCA,SAAC,GAAD,IAAEH,EAAF,EAAEA,OAAQyF,EAAV,EAAUA,UAAV,OAChB,kBAAC,IAAD,KACE,kBAACyI,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACC,EAAA,EAAD,CAAeP,MAAOA,IACpB,kBAACQ,EAAA,EAAD,MACA,kBAAC,GAAsBC,SAAvB,CAAgC5H,MAAO,CAAE1G,SAAQyF,cAC/C,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO/E,OAAK,EAAC6N,KAAK,IAAIC,UAAWC,KACjC,kBAAC,IAAD,CAAO/N,OAAK,EAAC6N,KAAK,YAAYC,UAAWxO,EAAS0O,GAAUC,KAC5D,kBAAC,IAAD,CAAOjO,OAAK,EAAC6N,KAAK,YAAYC,UAAWI,KACzC,kBAAC,IAAD,CAAOlO,OAAK,EAAC6N,KAAK,iBAAiBC,UAAWxO,EAAS6O,GAAWF,KAClE,kBAAC,IAAD,CAAOjO,OAAK,EAAC6N,KAAK,WAAYC,UAAWxO,EAAS8O,GAAUH,KAC5D,kBAAC,IAAD,CAAOJ,KAAK,IAAIC,UAAWG,c,6BCtC5BI,GAAe,CAC1BlM,MAAO,CACLe,KAAM,CACJf,MAAO,GACPqB,MAAO,GAETJ,QAAS,CACPhD,QAAQ,EACRkD,OAAO,IAGXiE,YAAa,CACXrE,KAAM,GACNuE,QAAS,CACPrH,QAAQ,EACRkD,OAAO,IAGXjE,KAAM,CACJC,QAAQ,EACRmF,MAAO,KCVL6J,GAAW,CACfnM,MlB6CqB,WAAkC,IAAjCoM,EAAgC,uDAApB,GAAIC,EAAgB,uDAAP,GAC/C,OAAQA,EAAOzK,MACb,KAAKL,GACH,OAAO,eACF6K,EADL,CAEEnL,QAAS,CACPhD,QAAQ,EACRkD,OAAO,KAIb,KAAKK,GACH,OAAO,eACF4K,EADL,CAEEnL,QAAS,CACPhD,QAAQ,EACRkD,OAAO,GAETJ,KAAM,CACJf,MAAOqM,EAAO1K,QAAQ3B,MACtBqB,MAAOgL,EAAO1K,QAAQN,SAI5B,KAAKI,GACH,OAAO,eACF2K,EADL,CAEEnL,QAAS,CACPhD,QAAQ,EACRkD,MAAOkL,EAAO1K,WAIpB,QACE,OAAOyK,IkB9EXhH,YdsBqB,WAAkC,IAAjCgH,EAAgC,uDAApB,GAAIC,EAAgB,uDAAP,GAC/C,OAAQA,EAAOzK,MACb,KAAKL,GACH,OAAO,eACF6K,EADL,CAEE9G,QAAS,CACPrH,QAAQ,EACRkD,OAAO,KAIb,KAAKK,GACH,OAAO,eACF4K,EADL,CAEE9G,QAAS,CACPrH,QAAQ,EACRkD,OAAO,GAETJ,KAAMsL,EAAO1K,UAGjB,KAAKF,GACH,OAAO,eACF2K,EADL,CAEE9G,QAAS,CACPrH,QAAQ,EACRkD,OAAO,KAIb,QACE,OAAOiL,IcpDXlP,K3BEqB,WAAkC,IAAjCkP,EAAgC,uDAApB,GAAIC,EAAgB,uDAAP,GAC/C,OAAOA,EAAOzK,MACZ,KAAKxE,EACH,MAAO,CACLD,QAAQ,EACRmF,MAAO+J,EAAO1K,SAGlB,QAAS,OAAOyK,K2BNpBE,OAAOC,KAAKL,IAAcM,SAAQ,SAAAC,GACH,oBAAlBN,GAASM,KAClBN,GAASM,GAAQ,eAACL,EAAD,uDAAa,KAAb,OAAsBA,OAI3C,IAAMM,GAAmBC,2BAAgBR,IAG5BS,GAAQC,uBACnBH,GACAR,GACAY,+BACEC,2BAAgBC,QClBAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1H,MACvB,2DCVN2H,IAASC,OAAO,kBAAC,IAAD,CAAUV,MAAOA,IAAQ,kBAAC,GAAD,OAAoBW,SAASC,eAAe,SDyH/E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvL,MAAK,SAAAwL,GACjCA,EAAaC,iB,mBElInB/Q,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,yBAAyB,UAAY,4BAA4B,QAAU,0BAA0B,YAAc,8BAA8B,YAAc,8BAA8B,MAAQ,wBAAwB,MAAQ,wBAAwB,UAAY,8B,mBCAlUD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,kBAAoB,sC,mBCApID,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,sBAAsB,kBAAoB,qC,mBCApGD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,SAAW,4BAA4B,cAAgB,mC,mBCAhHD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,0BAA0B,KAAO,sB","file":"static/js/main.3eae1733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"ErrorComponent_paper__18NpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loader_root__3IG-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostEdit_root__wLPzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostAdd_root__2E4fJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navigation_root__2I9XJ\",\"navigation\":\"Navigation_navigation__CCKaq\",\"navigationItem\":\"Navigation_navigationItem__3sXr_\",\"navigationLink\":\"Navigation_navigationLink__1dMdf\",\"active\":\"Navigation_active__d_gyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostForm_root__1yB7q\",\"inputBig\":\"PostForm_inputBig__23Xoc\",\"formControl\":\"PostForm_formControl__Mj902\",\"smallControls\":\"PostForm_smallControls__3w1EI\",\"status\":\"PostForm_status__2ebZ4\",\"btnControl\":\"PostForm_btnControl__1KHbD\",\"price\":\"PostForm_price__2reZO\",\"content\":\"PostForm_content__2SO67\",\"error\":\"PostForm_error__2A_ix\"};","/* selectors */\nexport const getIsAuth= ({user}) => user.isAuth;\nexport const getEmail = ({ user }) => user.email;\n\n/* action name creator */\nconst reducerName = 'user';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst AUTHENTICATE = createActionName('AUTHENTICATE');\n\n\nexport const authenticateUser = payload => ({ payload, type: AUTHENTICATE  });\n\n\nexport const reducer = (statePart = {}, action = {}) => {\n  switch(action.type) {\n    case AUTHENTICATE: {\n      return {\n        isAuth: true,\n        email: action.payload,\n      };\n    }\n    default: return statePart;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport clsx from 'clsx';\n\nimport { connect } from 'react-redux';\nimport { getIsAuth } from '../../../redux/userRedux.js';\n\nimport styles from './Navigation.module.scss';\n\nconst Component = ({className, isAuth }) => {\n  const linksList = (\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <NavLink exact to='/' className={styles.navigationLink} activeClassName={styles.active}>Home</NavLink>\n      </li>\n      <li className={styles.navigationItem}>\n        <NavLink exact to='/post/add' className={styles.navigationLink} activeClassName={styles.active}>Add</NavLink>\n      </li>\n      <li className={styles.navigationItem}>\n        <NavLink exact to='/myposts' className={styles.navigationLink} activeClassName={styles.active}>My</NavLink>\n      </li>\n    </ul>\n  );\n\n\n  return (\n    <nav className={clsx(className, styles.root)}>\n      <div>\n        {\n          isAuth ?\n            linksList\n            :\n            <div className={styles.navigationItem}>\n              <NavLink exact to='/' className={styles.navigationLink} activeClassName={styles.active}>Home</NavLink>\n            </div>\n        }\n      </div>\n      <div>\n        {\n          isAuth ?\n            <a href='http://localhost:8000/user/logout' className={styles.navigationLink}>Logout</a>\n            :\n            <a href='http://localhost:8000/auth/google' className={styles.navigationLink}>Login</a>\n        }\n      </div>\n    </nav>\n  );\n};\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isAuth: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuth: getIsAuth(state),\n});\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  Container as Navigation,\n  Component as NavigationComponent,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nimport  { Navigation } from '../Navigation/Navigation';\n\n\nimport styles from './Header.module.scss';\n\nconst Component = () => (\n  <div className={styles.root}>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Container>\n          <Navigation />\n        </Container>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport {\n  Component as Header,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport { Header } from '../Header/Header';\n\nimport styles from './MainLayout.module.scss';\n\nconst Component = ({children}) => (\n  <div className={styles.root}>\n    <Header />\n    <Container>\n      {children}\n    </Container>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n\nexport {\n  Component as MainLayout,\n};\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n\nimport styles from './ErrorComponent.module.scss';\n\nconst ErrorComponent = ({ title, message, isOpen, isLinkToHP }) => {\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={isOpen}\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={isOpen}>\n          <Paper className={styles.paper}>\n            <h3 id=\"transition-modal-title\">{title}</h3>\n            <p id=\"transition-modal-description\">{message}</p>\n            {\n              isLinkToHP && <Link href=\"/\">Back to home page</Link>\n            }\n          </Paper>\n        </Fade>\n      </Modal>\n    </div>\n\n  );\n};\n\n\nErrorComponent.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  isOpen: PropTypes.bool,\n  isLinkToHP: PropTypes.bool,\n};\n\n\nexport default ErrorComponent;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div className={styles.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './PostsList.module.scss';\n\nconst PostsList = ({ posts }) => {\n  return (\n    <div>\n      <ul className={styles.postList}>\n        {\n          posts.length > 0 ?\n            posts.map(post => (\n              <li\n                key={post.title}\n                className={styles.postItem}\n              >\n                <Link to={`/post/${post._id}`} className={styles.postTitleLink}>{post.title}</Link>\n              </li>\n            ))\n            :\n            <p>No available posts!</p>\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.array,\n};\n\nexport default PostsList;\n","const api = {\n  url: 'http://localhost:8000',\n  endPoints: {\n    posts: 'posts',\n  },\n};\n\n\nexport default api;\n","const pagesConfig = {\n  maxPostsOnPage: 12,\n}\n\nexport default pagesConfig;\n","import axios from 'axios';\nimport api from '../config/api';\nimport { authenticateUser } from './userRedux';\nimport pagesConfig from '../config/pages';\nconst maxPostsOnPage = pagesConfig.maxPostsOnPage;\n\n/* selectors */\nexport const getAll = ({posts}) => posts.data.posts;\nexport const isLoadingActive = ({ posts }) => posts.loading.active;\nexport const isLoadingError = ({ posts }) => posts.loading.error;\nexport const getPost = ({posts}, id) => posts.data.find(post => post.id === id);\nexport const getCount = ({posts}) => posts.data.count;\n\n/* action name creator */\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\n/* thunk creators */\n//demo fetching to see how error, loading and succes are working on frontend\nexport const fetchPosts = (page) => {\n  return (dispatch) => {\n    dispatch(fetchStarted());\n    const url = `${api.url}/${api.endPoints.posts}?limit=${maxPostsOnPage}&skip=${(page - 1) * maxPostsOnPage}`;\n    axios.get(url)\n      .then(result => {\n        dispatch(fetchSuccess({ posts: result.data.posts, count: result.data.count }));\n        if(result.data.user) {\n          const email = result.data.user.email;\n          dispatch(authenticateUser(email));\n        }\n      })\n      .catch(err => dispatch(fetchError()));\n  };\n};\n\nexport const fetchMyPosts = (page) => {\n  return (dispatch) => {\n    dispatch(fetchStarted());\n    const url = `${api.url}/${api.endPoints.posts}/my?limit=${maxPostsOnPage}&skip=${(page - 1) * maxPostsOnPage}`;\n    axios.get(url)\n      .then(result => dispatch(fetchSuccess({ posts: result.data.posts, count: result.data.count })))\n      .catch(err => dispatch(fetchError()));\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: {\n          posts: action.payload.posts,\n          count: action.payload.count\n        },\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n","import React from 'react';\n\nconst AuthenticationContext = React.createContext({ isAuth: false, userEmail: '' });\n\nexport default AuthenticationContext;\n","import React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ErrorComponent from '../../common/ErrorComponent/ErrorComponent';\nimport Loader from '../../common/Loader/Loader';\nimport PostsList from '../../common/PostsList/PostsList';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { connect } from 'react-redux';\nimport { getAll, fetchPosts, isLoadingActive, isLoadingError, getCount } from '../../../redux/postsRedux.js';\nimport AuthenticationContext from '../../../contexts/AuthenticationContext';\nimport pagesConfig from '../../../config/pages';\n\nimport styles from './Homepage.module.scss';\n\n\nconst Component = ({ fetchPosts, count, posts, isLoading, isError }) => {\n  const { isAuth } = useContext(AuthenticationContext);\n  const pages = Math.ceil(count / pagesConfig.maxPostsOnPage);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    fetchPosts(page);\n  }, [fetchPosts, page]);\n\n  return (\n    <section className={styles.root}>\n      <header className={styles.header}>\n        <h2>Posts:</h2>\n        {\n          isAuth && <Link to='/post/add' className={styles.link}>Add new</Link>\n        }\n      </header>\n      <div className={styles.list}>\n        {\n          isLoading ?\n            <Loader/>\n            :\n            <PostsList posts={posts}/>\n        }\n\n      </div>\n      {\n        pages > 1 &&\n        <div className={styles.paginationWrapper}>\n          <Pagination\n            count={pages}\n            page={page}\n            onChange={(e, value) => setPage(value)}\n            color=\"primary\"\n            siblingCount={0}\n          />\n        </div>\n      }\n      <ErrorComponent\n        title=\"Error - fetching data\"\n        message=\"Can not fetching posts list. Try again later!\"\n        isOpen={isError}\n      />\n    </section>\n\n  );\n};\n\nComponent.propTypes = {\n  fetchPosts: PropTypes.func,\n  posts: PropTypes.array,\n  isLoading: PropTypes.bool,\n  isError: PropTypes.bool,\n  userEmail: PropTypes.string,\n  count: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n  isLoading: isLoadingActive(state),\n  isError: isLoadingError(state),\n  count: getCount(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: (page) => dispatch(fetchPosts(page)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as Homepage,\n  Component as HomepageComponent,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './PostInfo.module.scss';\n\nconst PostInfo = ({ _id, title, content, createdAt, imageUrl, author, status, price, phone, localization  }) => {\n  const date = new Date(createdAt).toLocaleDateString();\n\n  return (\n    <article className={styles.root}>\n      <div className={styles.header}>\n        <h2>{title}</h2>\n        <div><strong>{localization} {date}</strong></div>\n      </div>\n\n      <div className={styles.description}>\n        <img className={styles.image} src={imageUrl} alt={title}/>\n        <div className={styles.textContent}>\n          <div>\n            <div className={styles.shortData}>\n              <p><span>autor: <strong>{author}</strong></span></p>\n              <p><span>tel.: <strong>{phone}</strong></span></p>\n              <p><strong>{status === 'closed' ? 'ogłoszenie nieaktualne' : 'ogłoszenie aktualne'}</strong></p>\n            </div>\n            <p className={styles.content}>{content}</p>\n          </div>\n          <div>\n            <h2 className={styles.price}><span className={styles.priceItem}>{price} zł</span></h2>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nPostInfo.propTypes = {\n  _id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  createdAt: PropTypes.string,\n  imageUrl: PropTypes.string,\n  author: PropTypes.string,\n  status: PropTypes.string,\n  price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  phone: PropTypes.string,\n  localization: PropTypes.string,\n};\n\nexport default PostInfo;\n","import axios from 'axios';\nimport api from '../config/api';\n\n/* selectors */\nexport const getCurrentPost = ({currentPost}) => currentPost.data;\nexport const isRequestActive = ({ currentPost }) => currentPost.request.active;\nexport const isRequestError = ({ currentPost }) => currentPost.request.error;\n\n/* action name creator */\nconst reducerName = 'current-post';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n\nexport const fetchOnePost= (postId) => {\n  return (dispatch) => {\n    dispatch(fetchStarted());\n    const url = `${api.url}/${api.endPoints.posts}/${postId}`;\n    axios.get(url)\n      .then(result => dispatch(fetchSuccess(result.data.post)))\n      .catch(err => dispatch(fetchError()));\n  };\n};\n\n\n/* reducer */\nexport const reducer = (statePart = [], action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        request: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        request: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        request: {\n          active: false,\n          error: true,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n","import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../../common/Loader/Loader';\nimport ErrorComponent from '../../common/ErrorComponent/ErrorComponent';\nimport PostInfo from '../../common/PostInfo/PostInfo';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { fetchOnePost,\n  getCurrentPost,\n  isRequestActive,\n  isRequestError } from '../../../redux/currentPostRedux';\nimport AuthenticationContext from '../../../contexts/AuthenticationContext';\n\nimport styles from './Post.module.scss';\n\nconst Component = ({match, fetchOnePost, post, isLoading, isError }) => {\n  const postId = match.params.id;\n  useEffect(() => {\n    fetchOnePost(postId);\n  }, [fetchOnePost, postId]);\n\n  const { isAuth, userEmail } = useContext(AuthenticationContext);\n\n  return (\n    <div className={styles.root}>\n      {\n        isLoading && <Loader />\n      }\n      {\n        (!!post && !isLoading && !isError) &&\n        <section>\n          {\n            (isAuth && post.author === userEmail)\n            &&\n            <div className={styles.linkWrapper}>\n              <Link className={styles.link} to={`/post/${post._id}/edit`}>\n                Edit\n              </Link>\n            </div>\n          }\n          <PostInfo {...post}/>\n        </section>\n      }\n      <ErrorComponent\n        isOpen={isError}\n        title={'Error - fetching data'}\n        message='Can not fetching post data! Please try again later.'\n        isLinkToHP={true}\n      />\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  post: PropTypes.object,\n  match: PropTypes.object,\n  fetchOnePost: PropTypes.func,\n  isLoading: PropTypes.bool,\n  isError: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  post: getCurrentPost(state),\n  isLoading: isRequestActive(state),\n  isError: isRequestError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOnePost: (postId) => dispatch(fetchOnePost(postId)),\n});\n\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\n\n\nexport {\n  Container as Post,\n};\n","import { useState } from 'react';\n\nconst useForm = (post) => {\n  const [title, setTitle] = useState(post ? post.title : '');\n  const [content, setContent] = useState(post ? post.content : '');\n  const [price, setPrice] = useState(post ? post.price : 0);\n  const [imageUrl, setImage] = useState(post ? post.imageUrl : '');\n  const [phone, setPhone] = useState(post ? post.phone : '');\n  const [localization, setLocalization] = useState(post ? post.localization : '');\n  const [status, setStatus] = useState(post ? post.status : 'published');\n\n  return {\n    fields: {\n      title,\n      content,\n      price,\n      imageUrl,\n      phone,\n      localization,\n      status,\n    },\n    methods: {\n      setTitle,\n      setContent,\n      setPrice,\n      setImage,\n      setPhone,\n      setLocalization,\n      setStatus,\n    },\n  };\n};\n\nexport default useForm;\n\n\n","import _v from 'validator';\n\nconst validator = {\n  isTitle: (value) => value.length > 9,\n  isContent: (value) => value.length > 19,\n  isEmail: (value) => _v.isEmail(value),\n  isUrl: (value) => _v.isURL(value),\n  isPhone: (value) => _v.isMobilePhone(value, 'pl-PL'),\n  isValidPrice: (value) => {\n    if(value >= 0 && ((value * 100 % 1) === 0)) return true;\n    return false;\n  },\n  isLocalization: (value) => value.length > 0,\n};\n\nexport default validator;\n","import { useState } from 'react';\nimport validator from '../../../utils/validator';\n\nconst useValidation = () => {\n  const [titleErr, setTitleError] = useState(false);\n  const [contentErr, setContentError] = useState(false);\n  const [imageUrlErr, setImageError] = useState(false);\n  const [phoneErr, setPhoneError] = useState(false);\n  const [localizationErr, setLocalizationError] = useState(false);\n\n  const checkAllFields = (titleValue, contentValue, imageUrlValue, phoneValue, localizationValue) => {\n    const isTitleValid = validator.isTitle(titleValue);\n    const isContentValid = validator.isContent(contentValue);\n    const isUrlValid = validator.isUrl(imageUrlValue);\n    const isPhoneValid = validator.isPhone(phoneValue);\n    const isLocalizationValid = validator.isLocalization(localizationValue);\n    setTitleError(!isTitleValid);\n    setContentError(!isContentValid);\n    setImageError(!isUrlValid);\n    setPhoneError(!isPhoneValid);\n    setLocalizationError(!isLocalizationValid);\n    return (isTitleValid && isContentValid && isUrlValid && isPhoneValid && isLocalizationValid);\n  };\n\n  const isValidPrice = validator.isValidPrice;\n\n  return {\n    fieldsErrors: {\n      titleErr,\n      contentErr,\n      imageUrlErr,\n      phoneErr,\n      localizationErr,\n    },\n    errorsMethods: {\n      checkAllFields,\n      setTitleError,\n      setContentError,\n      setImageError,\n      setPhoneError,\n      setLocalizationError,\n    },\n    isValidPrice,\n  };\n\n};\n\nexport default useValidation;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Loader from '../../common/Loader/Loader';\nimport ErrorComponent from '../../common/ErrorComponent/ErrorComponent';\nimport useForm from './useForm';\nimport useValidation from './useValidation';\n\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport styles from './PostForm.module.scss';\n\nconst PostForm = ({ post, submitAction, userEmail, submitButton, redirectUrl, editingId }) => {\n  const {\n    fields,\n    methods,\n  } = useForm(post);\n\n  const {\n    fieldsErrors,\n    errorsMethods,\n    isValidPrice,\n  } = useValidation();\n\n  const [isSent, setIsSent] = useState(false);\n  const [isSending, setIsSending] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  return (\n    <>\n      { isSending && <Loader />}\n      <form\n        className={styles.root}\n        onSubmit={(e) => {\n          e.preventDefault();\n          const isFormValid = errorsMethods.checkAllFields(fields.title, fields.content, fields.imageUrl, fields.phone, fields.localization);\n          if(isFormValid) {\n            const postId = editingId || null;\n            setIsSending(true);\n            submitAction({ ...fields }, userEmail, postId)\n              .then(result => {\n                setIsSending(false);\n                setIsSent(true);\n              })\n              .catch(err => {\n                setIsSending(false);\n                setIsError(true);\n              });\n          }\n        }}\n      >\n        <div className={styles.formControl}>\n          <TextField\n            error={fieldsErrors.titleErr}\n            className={styles.inputBig}\n            label='title'\n            value={fields.title}\n            onChange={(e) => {\n              methods.setTitle(e.target.value);\n              if(fieldsErrors.titleErr) {\n                errorsMethods.setTitleError(false);\n              }\n            }}\n            helperText='minimum 10 characters'\n          />\n        </div>\n        <div className={styles.formControl}>\n          <TextField\n            error={fieldsErrors.imageUrlErr}\n            className={styles.inputBig}\n            label=\"Image url\"\n            value={fields.imageUrl}\n            onChange={(e) => {\n              methods.setImage(e.target.value);\n              if(fieldsErrors.imageUrlErr) {\n                errorsMethods.setImageError(false);\n              }\n            }}\n          />\n        </div>\n        <div className={styles.formControl}>\n          <TextField\n            error={fieldsErrors.phoneErr}\n            label=\"Phone number\"\n            value={fields.phone}\n            onChange={(e) => {\n              methods.setPhone(e.target.value);\n              if(fieldsErrors.phoneErr) {\n                errorsMethods.setPhoneError(false);\n              }\n            }}\n          />\n        </div>\n        <div className={styles.formControl}>\n          <TextField\n            error={fieldsErrors.localizationErr}\n            label=\"Localization\"\n            value={fields.localization}\n            onChange={(e) => {\n              methods.setLocalization(e.target.value);\n              if(fieldsErrors.localizationErr) {\n                errorsMethods.setLocalizationError(false);\n              }\n            }}\n          />\n        </div>\n        <div className={clsx(styles.formControl, styles.smallControls)}>\n          <FormControl variant=\"outlined\" className={styles.status}>\n            <InputLabel htmlFor=\"status-select\">\n              Age\n            </InputLabel>\n            <Select\n              native\n              value={fields.status}\n              onChange={(e) => methods.setStatus(e.target.value)}\n              labelWidth={60}\n              inputProps={{\n                name: 'status',\n                id: 'status-select'\n              }}\n            >\n              <option value={'published'}>aktualny</option>\n              <option value={'draft'}>szkic</option>\n              <option value={'closed'}>nieaktualny</option>\n            </Select>\n          </FormControl>\n          <TextField\n            className={styles.price}\n            type=\"number\"\n            label=\"Price\"\n            variant=\"outlined\"\n            value={fields.price}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">zł</InputAdornment>,\n            }}\n            onChange={(e) => {\n              if(isValidPrice(e.target.value)) {\n                methods.setPrice(e.target.value);\n              }\n            }}\n          />\n        </div>\n        <div className={styles.formControl}>\n          <TextareaAutosize\n            value={fields.content}\n            className={clsx(styles.content, fieldsErrors.contentErr ? styles.error : null)}\n            placeholder='Content - minimum 20 characters'\n            onChange={(e) => {\n              methods.setContent(e.target.value);\n              if(fieldsErrors.contentErr) {\n                errorsMethods.setContentError(false);\n              }\n            }}\n          />\n        </div>\n        <div className={styles.btnControl}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n          >{submitButton ? submitButton : 'Submit'}\n          </Button>\n        </div>\n        {\n          isSent && <Redirect to={redirectUrl} />\n        }\n      </form>\n      <ErrorComponent\n        isOpen={isError}\n        title={'Error - sending data'}\n        message='Can not add post! Please try again later.'\n        isLinkToHP={true}\n      />\n    </>\n  );\n};\n\nPostForm.propTypes = {\n  post: PropTypes.object,\n  submitAction: PropTypes.func,\n  userEmail: PropTypes.string,\n  redirectUrl: PropTypes.string,\n  submitButton: PropTypes.string,\n  editingId: PropTypes.string,\n};\n\nexport default PostForm;\n","import axios from 'axios';\nimport api from '../config/api';\n\nconst editOnePost = (post, email, postId) => {\n  const url = `${api.url}/${api.endPoints.posts}/${postId}`;\n  return  axios.put(url, {\n    ...post,\n  });\n};\n\nexport default editOnePost;\n","import React, { useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../../common/Loader/Loader';\nimport ErrorComponent from '../../common/ErrorComponent/ErrorComponent';\nimport PostForm from '../../features/PostForm/PostForm';\nimport editOnePost from '../../../utils/editOnePost';\n\nimport { connect } from 'react-redux';\nimport { fetchOnePost,\n  getCurrentPost,\n  isRequestActive,\n  isRequestError } from '../../../redux/currentPostRedux';\nimport AuthenticationContext from '../../../contexts/AuthenticationContext';\n\nimport styles from './PostEdit.module.scss';\n\nconst Component = ({ match , fetchOnePost, isLoading, isError, post }) => {\n  const postId = match.params.id;\n  useEffect(() => {\n    fetchOnePost(postId);\n  }, [postId, fetchOnePost]);\n\n  const { userEmail } = useContext(AuthenticationContext);\n\n  return (\n    <div className={styles.root}>\n      <h2>Edit post #{postId}</h2>\n      {\n        isLoading && <Loader />\n      }\n      {\n        (!!post && post._id === postId) &&\n          <PostForm\n            post={post}\n            submitButton='Edit post'\n            userEmail={userEmail}\n            submitAction={editOnePost}\n            editingId={postId}\n            redirectUrl={`/post/${postId}`}\n          />\n      }\n      <ErrorComponent\n        isOpen={isError}\n        title={'Error - fetching data'}\n        message='Can not fetching post data! Please try again later.'\n        isLinkToHP={true}\n      />\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  match: PropTypes.object,\n  isLoading: PropTypes.bool,\n  isError: PropTypes.bool,\n  post: PropTypes.object,\n  fetchOnePost: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  post: getCurrentPost(state),\n  isLoading: isRequestActive(state),\n  isError: isRequestError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOnePost: (postId) => dispatch(fetchOnePost(postId)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as PostEdit,\n};\n","import axios from 'axios';\nimport api from '../config/api';\n\nconst addOnePost = (post, userEmail) => {\n  const url = `${api.url}/${api.endPoints.posts}`;\n  return axios.post(url, {\n    ...post,\n    author: userEmail,\n  });\n};\n\nexport default addOnePost;\n","import React, { useContext }  from 'react';\nimport PropTypes from 'prop-types';\nimport PostForm from '../../features/PostForm/PostForm';\nimport addOnePost from '../../../utils/addOnePost';\nimport AuthenticationContext from '../../../contexts/AuthenticationContext';\n\nimport styles from './PostAdd.module.scss';\n\nconst Component = () => {\n  const { userEmail } = useContext(AuthenticationContext);\n\n  return (\n    <div className={styles.root}>\n      <h2>New post:</h2>\n      <PostForm\n        submitAction={addOnePost}\n        userEmail={userEmail}\n        redirectUrl='/'\n        submitButton='Add post'\n      />\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport {\n  Component as PostAdd,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport styles from './NotFound.module.scss';\n\nconst Component = () => (\n  <div className={styles.root}>\n    <h2>Page not found</h2>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport {\n  Component as NotFound,\n  Component as NotFoundComponent,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ErrorComponent from '../../common/ErrorComponent/ErrorComponent';\nimport Loader from '../../common/Loader/Loader';\nimport PostsList from '../../common/PostsList/PostsList';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { connect } from 'react-redux';\nimport { getAll, fetchMyPosts, isLoadingActive, isLoadingError, getCount } from '../../../redux/postsRedux.js';\nimport pagesConfig from '../../../config/pages';\n\nimport styles from './MyPosts.module.scss';\n\nconst Component = ({ posts, count, fetchMyPosts, isLoading, isError }) => {\n  const pages = Math.ceil(count / pagesConfig.maxPostsOnPage);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    fetchMyPosts(page);\n  }, [fetchMyPosts]);\n\n  return (\n    <section className={styles.root}>\n      <header className={styles.header}>\n        <h2>My posts:</h2>\n        <Link to='/post/add' className={styles.link}>Add new</Link>\n      </header>\n      <div>\n        {\n          isLoading ?\n            <Loader/>\n            :\n            <PostsList posts={posts}/>\n        }\n\n      </div>\n      {\n        pages > 1 &&\n        <div className={styles.paginationWrapper}>\n          <Pagination\n            count={pages}\n            page={page}\n            onChange={(e, value) => setPage(value)}\n            color=\"primary\"\n            siblingCount={0}\n          />\n        </div>\n      }\n      <ErrorComponent\n        title=\"Error - fetching data\"\n        message=\"Can not fetching posts list. Try again later!\"\n        isOpen={isError}\n      />\n    </section>\n\n  );\n};\n\nComponent.propTypes = {\n  fetchMyPosts: PropTypes.func,\n  posts: PropTypes.array,\n  isLoading: PropTypes.bool,\n  isError: PropTypes.bool,\n  count: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n  isLoading: isLoadingActive(state),\n  isError: isLoadingError(state),\n  count: getCount(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMyPosts: (page) => dispatch(fetchMyPosts(page)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Container as MyPosts,\n  Component as MyPostsComponent,\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createMuiTheme, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport { MainLayout } from './components/layout/MainLayout/MainLayout';\nimport { Homepage } from './components/views/Homepage/Homepage';\nimport { Post } from './components/views/Post/Post';\nimport { PostEdit } from './components/views/PostEdit/PostEdit';\nimport { PostAdd } from './components/views/PostAdd/PostAdd';\nimport { NotFound } from './components/views/NotFound/NotFound';\nimport { MyPosts } from './components/views/MyPosts/MyPosts';\n\nimport { connect } from 'react-redux';\nimport { getIsAuth, getEmail } from './redux/userRedux';\nimport AuthenticationContext from './contexts/AuthenticationContext';\n\nimport PropTypes from 'prop-types';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#2B4C6F' },\n  },\n});\n\nconst Component = ({isAuth, userEmail }) => (\n  <BrowserRouter>\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AuthenticationContext.Provider value={{ isAuth, userEmail }} >\n          <MainLayout>\n            <Switch>\n              <Route exact path='/' component={Homepage} />\n              <Route exact path='/post/add' component={isAuth ? PostAdd : NotFound} />\n              <Route exact path='/post/:id' component={Post} />\n              <Route exact path='/post/:id/edit' component={isAuth ? PostEdit : NotFound} />\n              <Route exact path='/myposts'  component={isAuth ? MyPosts : NotFound} />\n              <Route path='*' component={NotFound} />\n            </Switch>\n          </MainLayout>\n        </AuthenticationContext.Provider >\n      </ThemeProvider>\n    </StylesProvider>\n  </BrowserRouter>\n);\n\nComponent.propTypes = {\n  isAuth: PropTypes.bool,\n  userEmail: PropTypes.string,\n};\n\nconst mapDispatchToProps = (state) => ({\n  isAuth: getIsAuth(state),\n  userEmail: getEmail(state),\n});\n\nconst Container = connect(mapDispatchToProps)(Component);\n\nexport {\n  Container as App,\n};\n","export const initialState = {\n  posts: {\n    data: {\n      posts: [],\n      count: 0,\n    },\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n  currentPost: {\n    data: {},\n    request: {\n      active: false,\n      error: false,\n    },\n  },\n  user: {\n    isAuth: false,\n    email: '',\n  },\n};\n","import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { initialState } from './initialState';\nimport { reducer as postsReducer } from './postsRedux';\nimport { reducer as userReducer } from './userRedux';\nimport { reducer as currentPostReducer } from './currentPostRedux';\n\n// define reducers\nconst reducers = {\n  posts: postsReducer,\n  currentPost: currentPostReducer,\n  user: userReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nexport const store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PostInfo_root__3EloO\",\"header\":\"PostInfo_header__lsrGt\",\"shortData\":\"PostInfo_shortData__2uMcj\",\"content\":\"PostInfo_content__2Sifj\",\"description\":\"PostInfo_description__3SOUq\",\"textContent\":\"PostInfo_textContent__2S3E2\",\"image\":\"PostInfo_image__1mRIM\",\"price\":\"PostInfo_price__GXIOP\",\"priceItem\":\"PostInfo_priceItem__1lxzb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Homepage_header__3ogJz\",\"link\":\"Homepage_link__2i0r5\",\"list\":\"Homepage_list__1I0FV\",\"paginationWrapper\":\"Homepage_paginationWrapper__3fan7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MyPosts_header__2UniC\",\"link\":\"MyPosts_link__3G7_d\",\"paginationWrapper\":\"MyPosts_paginationWrapper__2Xpku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"PostsList_postList__8iBse\",\"postItem\":\"PostsList_postItem__30CsN\",\"postTitleLink\":\"PostsList_postTitleLink__1IEmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Post_root__2Gjpq\",\"linkWrapper\":\"Post_linkWrapper__3lDPF\",\"link\":\"Post_link__vSaik\"};"],"sourceRoot":""}